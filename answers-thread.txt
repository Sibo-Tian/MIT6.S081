## Lab:thread

### 1. Uthread

A thread has a kernel stack to store context, a user stack to store context. (Note that in this lab, multi-threading is a feature xv6 not supported, and we implement a toy, user-designed multi-threading in user space.

We use `struct uthread_context` to behave like a kernel stack, and `char*` to serve as a user stack.

When creating a new thread, we allocate a thread cell for it in `ALL_Threads`, and set the `ra` `sp`, therefore it can run with correct PC and "user space". 


